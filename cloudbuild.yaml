options:
  logging: CLOUD_LOGGING_ONLY

steps:
  # Step 1: Fetch the full history to avoid shallow clone issues
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args: ['-c', 'git fetch --unshallow']

  # Step 2: Check for changes in the summary function
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: check-summary
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "Checking for changes in 'summary' folder..."
        if git rev-parse HEAD~1 >/dev/null 2>&1; then
          if git diff --quiet HEAD~1 HEAD -- cloudfunctions/summary; then
            echo "No changes in 'summary', skipping deployment."
            touch /workspace/skip-summary  # Create a skip file to indicate no changes
          else
            echo "Changes detected in 'summary'."
          fi
        else
          echo "First commit or no previous commit, proceeding with deployment."
        fi

  # Step 3: Deploy summary cloud function only if no skip file exists
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: deploy-summary
    waitFor: ['check-summary']  # Ensure this step waits for check-summary
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        if [ -f /workspace/skip-summary ]; then
          echo "Skipping 'summary' deployment as no changes were detected."
        else
          echo "Deploying 'summary' cloud function..."
          cd cloudfunctions/summary
          cp -r ../../utils .  # Copy utils to the function folder
          # Check function status and deploy only if it's not deploying
          while true; do
            function_status=$(gcloud functions describe summary --region us-central1 --format="value(state)")
            if [[ "$function_status" == "ACTIVE" ]]; then
              echo "Function is active, proceeding with deployment."
              gcloud functions deploy summary \
                --runtime python310 \
                --entry-point hello_world \
                --trigger-http \
                --region us-central1 \
                --source .
              break
            elif [[ "$function_status" == "DEPLOYING" || "$function_status" == "ROLLING" ]]; then
              echo "Function is deploying or rolling out, waiting..."
              sleep 30  # Wait for 30 seconds before retrying
            else
              echo "Unknown function status: $function_status. Exiting."
              exit 1
            fi
          done
        fi

  # Step 4: Check for changes in the sentimet function
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: check-sentimet
    waitFor: ['deploy-summary']  # Ensure this step waits for deploy-summary to finish
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "Checking for changes in 'sentimet' folder..."
        if git rev-parse HEAD~1 >/dev/null 2>&1; then
          if git diff --quiet HEAD~1 HEAD -- cloudfunctions/sentimet; then
            echo "No changes in 'sentimet', skipping deployment."
            touch /workspace/skip-sentimet  # Create a skip file to indicate no changes
          else
            echo "Changes detected in 'sentimet'."
          fi
        else
          echo "First commit or no previous commit, proceeding with deployment."
        fi

  # Step 5: Deploy sentimet cloud function only if no skip file exists
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: deploy-sentimet
    waitFor: ['check-sentimet']  # Ensure this step waits for check-sentimet
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        if [ -f /workspace/skip-sentimet ]; then
          echo "Skipping 'sentimet' deployment as no changes were detected."
        else
          echo "Deploying 'sentimet' cloud function..."
          cd cloudfunctions/sentimet
          cp -r ../../utils .  # Copy utils to the function folder
          # Check function status and deploy only if it's not deploying
          while true; do
            function_status=$(gcloud functions describe sentimet --region us-central1 --format="value(state)")
            if [[ "$function_status" == "ACTIVE" ]]; then
              echo "Function is active, proceeding with deployment."
              gcloud functions deploy sentimet \
                --runtime python310 \
                --entry-point hello_world \
                --trigger-http \
                --region us-central1 \
                --source .
              break
            elif [[ "$function_status" == "DEPLOYING" || "$function_status" == "ROLLING" ]]; then
              echo "Function is deploying or rolling out, waiting..."
              sleep 30  # Wait for 30 seconds before retrying
            else
              echo "Unknown function status: $function_status. Exiting."
              exit 1
            fi
          done
        fi

timeout: 1200s
